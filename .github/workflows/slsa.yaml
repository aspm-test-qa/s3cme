name: slsa_provenance_create

on:
  workflow_call:
    inputs:
      image_digest:
        description: 'Fully-qualified image digest to verify (registry/image@sha256:digest)'
        required: true
        type: string
      auth_provider:
        description: 'OIDC provider ID'
        required: true
        type: string
      auth_user:
        description: 'OIDC user ID'
        required: true
        type: string

permissions:
  contents: read

jobs:
  provenance:
    permissions:
      actions: read
      id-token: write
      packages: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.5.0
    with:
      image: $(echo ${{ inputs.image_digest }} | cut -d@ -f1)
      digest: $(echo ${{ inputs.image_digest }} | cut -d@ -f2)
      registry-username: ${{ github.actor }}
      gcp-workload-identity-provider: ${{ inputs.auth_provider }}
      gcp-service-account: ${{ inputs.auth_user }}

  verify:
    needs:
    - provenance
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
    steps:

    # Expected hash from: https://github.com/slsa-framework/slsa-verifier/blob/main/SHA256SUM.md
    - name: Install Verifier
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -euo pipefail
        gh -R slsa-framework/slsa-verifier release download v2.0.1 -p "slsa-verifier-linux-amd64"
        chmod ug+x slsa-verifier-linux-amd64
        COMPUTED_HASH=$(sha256sum slsa-verifier-linux-amd64 | cut -d ' ' -f1)
        EXPECTED_HASH="ad4b408c43504d439827998c27ab4be1c44ff467ccb39b78da01568f8542b10e"
        if [[ "$EXPECTED_HASH" != "$COMPUTED_HASH" ]];then
            echo "error: expected '${EXPECTED_HASH}', got '${COMPUTED_HASH}'"
            exit 1
        fi

    - name: Verify Image SLSA Provenance
      run: |
        set -euo pipefail
        slsa-verifier verify-image ${{ inputs.image_digest }} \
          --source-uri github.com/mchmarny/s3cme \
          --source-tag ${{ vars.GITHUB_REF_NAME }} \
          
