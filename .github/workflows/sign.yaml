name: sign_image

on:
  workflow_call:
    inputs:
      image_digest:
        description: 'Fully-qualified image digest to verify (registry/image@sha256:digest)'
        required: true
        type: string
      cosign_version:
        description: 'The version of cosign to use'
        required: false
        type: string
        default: 'v1.13.1'
      scan_severity:
        description: 'Error on vulnerability scan severity'
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'

permissions:
  contents: read

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:

    - name: Scan Image
      uses: aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2  # 0.10.0
      with:
        scan-type: image
        security-checks: vuln
        severity: ${{ inputs.scan_severity }}
        image-ref: ${{ inputs.image_digest }}
        format: sarif
        output: trivy-results.sarif
        hide-progress: true
        timeout: "10m"
        exit-code: "1"
        github-pat: ${{ secrets.GITHUB_TOKEN }}

  sign:
    needs:
    - scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      packages: write
    steps:

    - name: Install Cosign
      uses: sigstore/cosign-installer@9e9de2292db7abb3f51b7f4808d98f0d347a8919  # v3.0.2
      with:
        cosign-release: ${{ inputs.cosign_version }}

    - name: Auth Cosign
      run: |
        cosign login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Keys
      run: |
        COSIGN_PASSWORD=$(openssl rand -base64 12)
        cosign generate-key-pair

    - name: Sign Image
      env:
        COSIGN_EXPERIMENTAL: true
        COSIGN_YES: true
      run: |
        cosign sign ${{ inputs.image_digest }} \
            --force \
            --key cosign.key \
            -a sha=${{ github.sha }} \
            -a run_id=${{ github.run_id }} \
            -a run_attempt=${{ github.run_attempt }} \
            -a tag=${{ env.GITHUB_REF_NAME }}

    - name: Attest Signature
      env:
        COSIGN_EXPERIMENTAL: true
      run: |
        cosign verify --key cosign.pub ${{ inputs.image_digest }}

    - name: Attest SBOM
      env:
        COSIGN_YES: true
      run: |
        cosign download sbom ${{ inputs.image_digest }} --output-file bom.spdx.json
        cosign attest --timeout=0 --type spdxjson --predicate bom.spdx.json ${{ inputs.image_digest }}

    - name: Verify Attest
      env:
        COSIGN_YES: true
      run: |
        cosign verify-attestation --type spdxjson \
          --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
          --certificate-identity-regexp "^https://github.com/mchmarny/s3cme/.github/workflows/on-tag.yaml@refs/tags/v[0-9]+.[0-9]+.[0-9]+$" \
          ${{ inputs.image_digest }}
